(()=>{let e=null,t=[];const a=$("#dateRange"),n=e=>numeral(e.value).format("$0,0.00"),o=new simpleTableAG({id:"dataTable",columns:[{headerName:"Account",field:"account"},{headerName:"Type",field:"type"},{headerName:"Quantity",field:"quantity"},{headerName:"Revenue",field:"income",valueFormatter:n},{headerName:"COGS",field:"expenses",valueFormatter:n}],rowData:t,gridOptions:{components:{tableRef:"dataTable"}},autoHeight:!0}),r={chart:null,id:"pieIncome"},s={chart:null,id:"pieExpenses"},i=(e,t)=>{const a=_.merge({chart:{type:"pie",height:t.series.length>0?280:0},tooltip:{y:{formatter:function(e){return numeral(e).format("$0,0.00")}}}},t);e.chart?e.chart.updateOptions(a):(e.chart=new ApexCharts(document.querySelector(`#${e.id}`),a),e.chart.render())},d=(n=a.data().daterangepicker.startDate,d=a.data().daterangepicker.endDate)=>{$.ajax({url:"/report/profitAndLossData",type:"GET",data:{start:n.format("YYYY/MM/DD"),end:d.format("YYYY/MM/DD")},success:a=>{t=[],a.loadData.carriers.forEach((e=>{t.push({account:e.name,type:"Costs of goods sold",quantity:e.quantity,income:e.income,expenses:e.expenses})}));let n=0,p=[],c=[],m=0;a.income.forEach((e=>{const a=Number(e.amount);if(n+=a,e.type){const t=c.indexOf(e.type.name);-1===t?(p.push(a),c.push(e.type.name)):p[t]+=a}else m+=a;t.push({account:e.account?e.account.name:null,type:e.type?e.type.name:null,quantity:1,income:e.amount,expenses:0})})),m>0&&(c.push("undefined"),p.push(m));let u=0,l=[],h=[],x=0;a.expenses.forEach((e=>{const a=Number(e.amount);if(u+=a,e.type){const t=h.indexOf(e.type.name);-1===t?(l.push(Number(a.toFixed(2))),h.push(e.type.name)):l[t]=Number((l[t]+a).toFixed(2))}else x+=a;t.push({account:e.account?e.account.name:null,type:e.type?e.type.name:null,quantity:1,income:0,expenses:e.amount})})),x>0&&(h.push("undefined"),l.push(x));const f=Number((n+a.loadData.paid_income+a.loadData.pending_income).toFixed(2)),b=Number((u+a.loadData.paid_expenses+a.loadData.pending_expenses).toFixed(2)),y=Number((f-b).toFixed(2));n=Number(n.toFixed(2)),u=Number(u.toFixed(2));let g=[{name:"Revenue",data:[Number(a.loadData.paid_income.toFixed(2)),n,f]},{name:"COGS",data:[Number(-a.loadData.paid_expenses.toFixed(2)),-u,-b]},{name:"Gross Profit",data:[Number((a.loadData.paid_income-a.loadData.paid_expenses).toFixed(2)),Number((n-u).toFixed(2)),y]}],D={categories:[["Paid Loads"],["Accounting"],["Totals"]]};d.isBefore(moment().startOf("week"))||(g[0].data.splice(1,0,Number(a.loadData.pending_income.toFixed(2))),g[1].data.splice(1,0,Number((-a.loadData.pending_expenses).toFixed(2))),g[2].data.splice(1,0,Number((a.loadData.pending_income-a.loadData.pending_expenses).toFixed(2))),D.categories.splice(1,0,["Pending Loads"]));(t=>{const a=_.merge({chart:{height:350,type:"bar"},dataLabels:{enabled:!0},stroke:{show:!0,width:2,colors:["transparent"]},fill:{opacity:1}},t);e?e.updateOptions(a):(e=new ApexCharts(document.querySelector("#barChart"),a),e.render())})({series:g,colors:[chartColorsObj.success,chartColorsObj.danger,chartColorsObj.warning],xaxis:D,tooltip:{y:{formatter:function(e){return numeral(e).format("$0,0.00")}}},title:{text:"Gross Profit"},plotOptions:{bar:{dataLabels:{position:"top"}}}}),i(r,{series:p,labels:c,title:{text:"Income"}}),i(s,{series:l,labels:h,title:{text:"Expenses"}}),o.rowData=t,o.gridOptions.api.setRowData(t),o.gridOptions.api.setPinnedBottomRowData((()=>{let e=0,a=0;return t.forEach((t=>{e+=Number(t.income),a+=Number(t.expenses)})),[{income:e,expenses:a}]})()),o.gridOptions.api.sizeColumnsToFit()},error:()=>{throwErrorMsg()}})};a.daterangepicker({format:"YYYY/MM/DD",startDate:moment().startOf("week"),endDate:moment().endOf("week")},((e,t,a)=>{d(e,t)})),d()})();
