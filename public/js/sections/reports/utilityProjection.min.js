(()=>{let e=null,a=[];const t=$("#dateRange"),n=e=>numeral(e.value).format("$0,0.00"),o=new simpleTableAG({id:"dataTable",columns:[{headerName:"Account",field:"account"},{headerName:"Type",field:"type"},{headerName:"Quantity",field:"quantity"},{headerName:"Income",field:"income",valueFormatter:n},{headerName:"Expenses",field:"expenses",valueFormatter:n}],rowData:a,gridOptions:{components:{tableRef:"dataTable"}},autoHeight:!0}),s=(n=t.data().daterangepicker.startDate,s=t.data().daterangepicker.endDate)=>{$.ajax({url:"/report/utilityProjectionData",type:"GET",data:{start:n.format("YYYY/MM/DD"),end:s.format("YYYY/MM/DD")},success:t=>{a=[],t.loadData.carriers.forEach((e=>{a.push({account:e.name,type:"Costs of goods sold",quantity:e.quantity,income:e.income,expenses:e.expenses})}));let n=0;t.income.forEach((e=>{const t=Number(e.amount);n+=t,a.push({account:e.account?e.account.name:null,type:e.type?e.type.name:null,quantity:1,income:e.amount,expenses:0})}));let i=0;t.expenses.forEach((e=>{const t=Number(e.amount);i+=t,a.push({account:e.account?e.account.name:null,type:e.type?e.type.name:null,quantity:1,income:0,expenses:e.amount})}));const r=n+t.loadData.paid_income+t.loadData.pending_income,d=i+t.loadData.paid_expenses+t.loadData.pending_expenses,c=r-d;let l=[{name:"Income",data:[t.loadData.paid_income,n,r]},{name:"Expenses",data:[-t.loadData.paid_expenses,-i,-d]},{name:"Utility",data:[t.loadData.paid_income-t.loadData.paid_expenses,n-i,c]}],p={categories:[["Paid Loads"],["Accounting"],["Totals"]]};s.isBefore(moment().startOf("week"))||(l[0].data.splice(1,0,t.loadData.pending_income),l[1].data.splice(1,0,-t.loadData.pending_expenses),l[2].data.splice(1,0,t.loadData.pending_income-t.loadData.pending_expenses),p.categories.splice(1,0,["Pending Loads"]));(a=>{const t=_.merge({chart:{height:350,type:"bar"},title:{text:"Utility"},plotOptions:{bar:{horizontal:!1,endingShape:"flat",columnWidth:"55%"}},dataLabels:{enabled:!0},stroke:{show:!0,width:2,colors:["transparent"]},fill:{opacity:1}},a);e?e.updateOptions(t):(e=new ApexCharts(document.querySelector("#barChart"),t),e.render())})({series:l,colors:[chartColorsObj.success,chartColorsObj.danger,chartColorsObj.warning],xaxis:p,tooltip:{y:{formatter:function(e){return numeral(e).format("$0,0.00")}}}}),o.rowData=a,o.gridOptions.api.setRowData(a),o.gridOptions.api.setPinnedBottomRowData((()=>{let e=0,t=0;return a.forEach((a=>{e+=Number(a.income),t+=Number(a.expenses)})),[{income:e,expenses:t}]})()),o.gridOptions.api.sizeColumnsToFit()},error:()=>{throwErrorMsg()}})};t.daterangepicker({format:"YYYY/MM/DD",startDate:moment().startOf("week"),endDate:moment().endOf("week")},((e,a,t)=>{s(e,a)})),s()})();
